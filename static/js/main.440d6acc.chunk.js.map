{"version":3,"sources":["components/header.js","components/popup.js","rest.js","pages/home.js","hooks/window.js","tokens.js","pages/about.js","App.js","serviceWorker.js","index.js","images/logo512.png"],"names":["DateForm","mindate","maxdate","fetchdatedata","settoday","setexpanded","useState","Date","date","setdate","selected","onChange","dateFormat","minDate","maxDate","placeholderText","showMonthYearPicker","className","size","CountyForm","counties","fetchcountydata","sethere","county","setcounty","Form","inline","onSubmit","e","preventDefault","Row","Col","xs","Control","as","value","target","map","index","key","LoadingButton","variable","fetch","setvariable","isLoading","setLoading","useEffect","then","r","Button","variant","type","disabled","onClick","Spinner","role","animation","withRouter","location","expanded","setExpanded","Navbar","bg","expand","sticky","onToggle","Brand","href","src","logo","height","width","alt","Nav","pathname","Link","Popup","arrests","countyData","predictionStart","today","margin","xMax","yMax","x","d","y","xScale","scaleTime","range","domain","extent","yScale","scaleLinear","Math","max","yearFormat","timeFormat","chart","fill","rx","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","AxisLeft","label","top","scale","hideAxisLine","left","hideTicks","tickLabelProps","fontSize","textAnchor","AxisBottom","tickFormat","Group","i","year","barHeight","barX","barY","Bar","parse","getMonth","getFullYear","Home","isClient","window","getSize","innerWidth","undefined","innerHeight","windowSize","setWindowSize","handleResize","addEventListener","removeEventListener","useWindowSize","mapContainer","useRef","lng","lat","zoom","setMinDate","setMaxDate","dateData","setDateData","setToday","getMap","radiusSizes","fontSizes","colors","mapboxgl","Map","container","style","center","on","coordinates","a","fetchCountyData","placeholder","document","createElement","ReactDOM","render","setDOMContent","setLngLat","addTo","addSource","data","cluster","clusterMaxZoom","clusterRadius","clusterProperties","addLayer","source","filter","paint","layout","features","queryRenderedFeatures","point","layers","clusterId","properties","cluster_id","getSource","getClusterExpansionZoom","err","easeTo","geometry","getCanvas","cursor","slice","abs","lngLat","addPopup","url","api","replace","text","JSON","dataPoint","split","catch","console","log","minstr","minyear","parseInt","minmonth","maxstr","length","maxyear","maxmonth","fetchDates","ref","el","accessToken","About","Container","sm","App","path","exact","Boolean","hostname","match","basename","process","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.440d6acc.chunk.js","sourcesContent":["import React from 'react';\nimport {useState, useEffect} from 'react';\nimport {withRouter} from 'react-router'\nimport DatePicker from 'react-datepicker';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport Button from 'react-bootstrap/Button';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\nimport {FaSistrix} from 'react-icons/fa';\nimport logo from '../images/logo512.png';\n\n\nfunction Header({\n                    mindate, maxdate, fetchdatedata, settoday, location,\n                    counties, fetchcountydata, sethere\n                }) {\n\n    const [expanded, setExpanded] = useState(false);\n\n    return (\n        <Navbar bg='light' expand='lg' sticky='top' onToggle={setExpanded} expanded={expanded}>\n            <Navbar.Brand href='/'>\n                <img src={logo} className=\"d-inline-block align-top\" height=\"30\" width=\"30\" alt=\"logo\"/>\n                {' '}\n                AI Melts ICE\n            </Navbar.Brand>\n            <Nav className='ml-sm-auto ml-xs-0 my-2'>\n                {location.pathname === '/' ?\n                    <DateForm\n                        maxdate={maxdate}\n                        mindate={mindate}\n                        fetchdatedata={fetchdatedata}\n                        settoday={settoday}\n                        setexpanded={setExpanded}/>\n                    :\n                    null}\n\n                {location.pathname === '/county' ?\n                    <CountyForm\n                        counties={counties}\n                        fetchcountydata={fetchcountydata}\n                        sethere={sethere}\n                        setexpanded={setExpanded}/>\n                    :\n                    null}\n            </Nav>\n            <Nav className='ml-sm-auto ml-xs-0'>\n                <Nav.Link href='/about'>\n                    About\n                </Nav.Link>\n            </Nav>\n        </Navbar>\n    );\n}\n\nfunction DateForm({mindate, maxdate, fetchdatedata, settoday, setexpanded}) {\n\n    const [date, setdate] = useState(new Date());\n\n    return (\n        <div>\n\n            <DatePicker\n                selected={date}\n                onChange={date => {\n                    setdate(date);\n                    fetchdatedata(date);\n                    settoday(date);\n                }}\n                dateFormat='MMMM yyyy'\n                minDate={mindate}\n                maxDate={maxdate}\n                placeholderText='Select a month'\n                showMonthYearPicker/>\n\n            <FaSistrix className={'mx-2'} size={'1em'}/>\n\n        </div>\n    );\n}\n\nfunction CountyForm({counties, fetchcountydata, sethere, setexpanded}) {\n\n    const [county, setcounty] = useState(counties.counties[0]);\n\n    return (\n        <div>\n            <Form\n                inline\n                onSubmit={(e) => {\n                    e.preventDefault();\n                    fetchcountydata(county);\n                    sethere(county);\n                }}>\n                <Form.Row>\n                    <Col xs>\n                        <Form.Control\n                            className=\"mr-sm-2\"\n                            as=\"select\"\n                            value={county}\n                            onChange={(e) => setcounty(e.target.value)}>\n                            {\n                                counties.counties.map((county, index) =>\n                                    <option key={'county' + index}>{county}</option>\n                                )\n                            }\n                        </Form.Control>\n                    </Col>\n                    <Col>\n                        <LoadingButton\n                            variable={county}\n                            fetch={fetchcountydata}\n                            setvariable={sethere}\n                            setexpanded={setexpanded}/>\n                    </Col>\n                </Form.Row>\n            </Form>\n        </div>\n    );\n}\n\nfunction LoadingButton({fetch, variable, setvariable, setexpanded}) {\n\n    const [isLoading, setLoading] = useState(false);\n\n    useEffect(() => {\n        if (isLoading) {\n            fetch(variable).then(r => {\n                setLoading(false);\n            });\n            setvariable(variable);\n            setexpanded(false);\n        }\n    }, [isLoading, variable]);\n\n    const handleClick = () => setLoading(true);\n\n    return (\n        <Button\n            variant='outline-primary'\n            className='mr-1 mx-0 non-resizing'\n            type='submit'\n            disabled={isLoading}\n            onClick={!isLoading ? handleClick : null}\n        >\n            {isLoading ?\n                <Spinner as='span' role='status' animation='border' variant='primary' size='sm'/>\n                :\n                <FaSistrix/>}\n        </Button>\n    );\n}\n\nexport default withRouter(Header);\n","import React from 'react';\nimport { Group } from '@vx/group';\nimport { AxisLeft, AxisBottom } from '@vx/axis';\nimport { Bar } from '@vx/shape';\nimport { scaleTime, scaleLinear } from '@vx/scale';\nimport { extent } from 'd3-array';\nimport { timeFormat } from 'd3-time-format';\n\nexport default function Popup ({county, arrests, countyData, predictionStart, today}) {\n    const width = 215;\n    const height = 150;\n    const margin = {\n        top: 20,\n        bottom: 30,\n        left: 10,\n        right: 10,\n    };\n    const xMax = width - margin.left - margin.right;\n    const yMax = height - margin.top - margin.bottom;\n    // Anonymous functions to extract right data from each element in countyData\n    const x = d => d.x;\n    const y = d => d.y;\n\n    const xScale = scaleTime({\n        range: [0, xMax],\n        domain: extent(countyData, x)\n    });\n    const yScale = scaleLinear({\n        range: [yMax, 0],\n        domain: [0, Math.max(...countyData.map(y))]\n    });\n    const yearFormat = timeFormat('%Y');\n    const formatDate = date => yearFormat(date);\n\n    const monthNames = ['January', 'February', 'March', 'April', 'May', 'June',\n        'July', 'August', 'September', 'October', 'November', 'December'\n    ];\n\n    const chart = (\n        <svg width={width} height={height}>\n            <rect x={0} y={0} width={width} height={height} fill=\"#f7f7f7\" rx={14} />\n            <defs>\n                <linearGradient id=\"gradient\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\n                    <stop offset=\"0%\" stopColor=\"#FFFFFF\" stopOpacity={1} />\n                    <stop offset=\"100%\" stopColor=\"#FFFFFF\" stopOpacity={0.2} />\n                </linearGradient>\n            </defs>\n            <AxisLeft\n                label={'Arrests'}\n                top={15}\n                scale={yScale}\n                hideAxisLine={true}\n                left={15}\n                hideTicks={true}\n                tickLabelProps={(value, index) => ({\n                    fontSize: 7,\n                    textAnchor: 'middle'\n                })}\n            />\n            <AxisBottom\n                top={yMax + margin.top}\n                tickFormat={formatDate}\n                scale={xScale}\n                left={15}\n                hideAxisLine={false}\n                tickLabelProps={(value, index) => ({\n                    fontSize: 7,\n                    textAnchor: 'middle'\n                })}\n            />\n            <Group top={15} left={15}>\n                {countyData.map((d, i) => {\n                    const year = x(d);\n                    const barHeight = yMax - yScale(y(d));\n                    const barX = xScale(year);\n                    const barY = yMax - barHeight;\n                    return (\n                        <Bar\n                            key={`bar-${year}`}\n                            x={barX}\n                            y={barY}\n                            width={4}\n                            height={barHeight}\n                            fill={year >= Date.parse(predictionStart) ? \"#c1cefa\" : \"#0b4fad\"}\n                        />\n                    );\n                })}\n            </Group>\n        </svg>\n    )\n    return (\n        <div className=\"py-2 px-2\">\n          <strong className=\"popup-header my-2\">\n          {county}\n          </strong>\n          <p className='popup-body my-2'>\n            <b>{arrests}</b> {today >= Date.parse(predictionStart) ? 'predicted' : null} {arrests === 1 ? 'arrest' : 'arrests'} in {monthNames[today.getMonth()]}{' '}{today.getFullYear()}\n          </p>\n          <p className='popup-body my-2'>\n            Arrests and predictions:\n          </p>\n          <div className='mt-2 mr-1'>\n            {chart}\n          </div>\n        </div>\n    );\n}\n","export default {\n  root: 'https://ai-melts-ice.appspot.com'\n  // root: 'http://0.0.0.0:8080'\n}\n","import React, {useEffect, useRef, useState} from 'react';\nimport Header from '../components/header';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Popup from '../components/popup';\nimport ReactDOM from 'react-dom';\nimport mapboxgl from 'mapbox-gl';\nimport token from '../tokens.js';\nimport api from '../rest';\nimport useWindowSize from '../hooks/window';\nimport logo from '../images/logo512.png';\n\n\nmapboxgl.accessToken = token.mapBoxToken;\n\nexport default function Home() {\n\n  // map render functions + state ==============================================\n  const monthNames = ['January', 'February', 'March', 'April', 'May', 'June',\n  'July', 'August', 'September', 'October', 'November', 'December'\n  ];\n\n  const size = useWindowSize();\n\n  let mapContainer = useRef();\n  const [lng] = useState(-96);\n  const [lat] = useState(40);\n  const [zoom] = useState(size.width < 550 ? 2 : 3.6);\n  // min and max state\n  const[minDate, setMinDate] = useState(new Date(2015, 1));\n  const [maxDate, setMaxDate] = useState(new Date(2021, 12));\n  // date data state\n  const [dateData, setDateData] = useState(null);\n  // current date that data is being displayed for\n  const [today, setToday] = useState(new Date() <= maxDate ? new Date() : maxDate);\n\n\n  function getMap() {\n    const radiusSizes = size.width < 550 ? [ 30, 100, 40, 500, 50] : [ 30, 100, 40, 500, 60];\n    const fontSizes = [ 20, 100, 30, 500, 40];\n    const colors = ['#ffcc00', 100, '#ff9966', 500, '#cc3300'];\n    const opacity = 0.7;\n    const map = new mapboxgl.Map({\n      container: mapContainer,\n      style: 'mapbox://styles/camilodoa/ck9xqloge1g0f1ipj4y85tkzh',\n      center: [lng, lat],\n      zoom: zoom\n    });\n    map.on('load', () => {\n      map.addSource('ai-melts-ice', {\n        type: 'geojson',\n        data: dateData['data'],\n        cluster: true,\n        clusterMaxZoom: 5,\n        clusterRadius: 60,\n        clusterProperties: {\n          \"arrests_sum\": [\"+\", ['get', 'arrests']]\n        }\n      });\n      map.addLayer({\n        id: 'cluster',\n        type: 'circle',\n        source: 'ai-melts-ice',\n        filter: [\">\", 'arrests_sum', 0],\n        paint: {\n          'circle-color': [\n            'step',\n            ['get', 'arrests_sum'],\n            colors[0],\n            colors[1],\n            colors[2],\n            colors[3],\n            colors[4]\n          ],\n          'circle-radius': [\n            'step',\n            ['get', 'arrests_sum'],\n            radiusSizes[0],\n            radiusSizes[1],\n            radiusSizes[2],\n            radiusSizes[3],\n            radiusSizes[4]\n          ],\n          'circle-opacity': opacity\n        }\n      });\n      map.addLayer({\n        id: 'cluster-count',\n        type: 'symbol',\n        source: 'ai-melts-ice',\n        filter: [\">\", 'arrests_sum', 0],\n        layout: {\n          'text-field': ['get', 'arrests_sum'],\n          'text-font': ['DIN Offc Pro Medium', 'Arial Unicode MS Bold'],\n          'text-size': [\n            'step',\n            ['get', 'arrests_sum'],\n            fontSizes[0],\n            fontSizes[1],\n            fontSizes[2],\n            fontSizes[3],\n            fontSizes[4]\n          ]\n        }\n      });\n      map.addLayer({\n        id: 'unclustered-point',\n        type: 'circle',\n        source: 'ai-melts-ice',\n        filter: [\"all\", ['!has', 'point_count'], [\">\", 'arrests', 0]],\n        paint: {\n          'circle-color': [\n            'step',\n            ['get', 'arrests'],\n            colors[0],\n            colors[1],\n            colors[2],\n            colors[3],\n            colors[4]\n          ],\n          'circle-radius': [\n            'step',\n            ['get', 'arrests'],\n            radiusSizes[0],\n            radiusSizes[1],\n            radiusSizes[2],\n            radiusSizes[3],\n            radiusSizes[4]\n          ],\n          'circle-opacity': opacity\n        }\n      });\n      map.addLayer({\n        id: 'unclustered-count',\n        type: 'symbol',\n        source: 'ai-melts-ice',\n        filter: [\"all\", ['!has', 'point_count'], [\">\", 'arrests', 0]],\n        layout: {\n          'text-field': ['get', 'arrests'],\n          'text-font': ['DIN Offc Pro Medium', 'Arial Unicode MS Bold'],\n          'text-size': [\n            'step',\n            ['get', 'arrests'],\n            fontSizes[0],\n            fontSizes[1],\n            fontSizes[2],\n            fontSizes[3],\n            fontSizes[4]\n          ]\n        }\n      });\n      // inspect a cluster on click\n      map.on('click', 'cluster', function(e) {\n        var features = map.queryRenderedFeatures(e.point, {\n          layers: ['cluster']\n        });\n        var clusterId = features[0].properties.cluster_id;\n        map.getSource('ai-melts-ice').getClusterExpansionZoom(\n          clusterId,\n          function(err, zoom) {\n            if (err) return;\n\n            map.easeTo({\n              center: features[0].geometry.coordinates,\n              zoom: zoom\n            });\n          }\n        );\n      });\n\n      map.on('mouseenter', 'cluster', function() {\n        map.getCanvas().style.cursor = 'pointer';\n      });\n\n      map.on('mouseleave', 'cluster', function() {\n        map.getCanvas().style.cursor = '';\n      });\n\n      // Add popup to map\n      async function addPopup(arrests, coordinates, county) {\n        let countyData = await fetchCountyData(county);\n        const placeholder = document.createElement('popup');\n        const predictionStart = dateData.predictionStart;\n        ReactDOM.render(new Popup({\n          arrests: arrests,\n          county: county,\n          countyData,\n          predictionStart,\n          today}), placeholder);\n        new mapboxgl.Popup()\n            .setDOMContent(placeholder)\n            .setLngLat(coordinates)\n            .addTo(map);\n      }\n\n      map.on('click', 'unclustered-point', function(e) {\n        const coordinates = e.features[0].geometry.coordinates.slice();\n        // Ensure that if the map is zoomed out such that multiple\n        // copies of the feature are visible, the popup appears\n        // over the copy being pointed to.\n        while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\n        coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\n        }\n        addPopup(e.features[0].properties.arrests, coordinates, e.features[0].properties.county);\n      });\n\n      map.on('mouseenter', 'unclustered-point', function() {\n        map.getCanvas().style.cursor = 'pointer';\n      });\n\n      map.on('mouseleave', 'unclustered-point', function() {\n        map.getCanvas().style.cursor = '';\n      });\n    });\n  }\n\n  // fetch county data\n  async function fetchCountyData (county) {\n    let url = api.root + '/countydata/' + county.replace(' ', '%20');\n    return await fetch(url).then(\n        r => r.text()\n    ).then(\n        r => r = JSON.parse(r)\n    ).then(r => {\n      return r.data.map(dataPoint => (\n          {\n            x: new Date(dataPoint.date.split('-')[0], dataPoint.date.split('-')[1]),\n            y: dataPoint.arrests\n          }\n      ));\n    }).catch(\n        err => console.log(err)\n    );\n  }\n\n  // date data fetch functions + state =========================================\n\n  // fetch date range from API\n  async function fetchDates(){\n    let url = api.root + '/dates';\n    return await fetch(url).then(\n      r => r.text()\n    ).then(\n      r => r = JSON.parse(r)\n    ).then(r => {\n      let minstr = r[0].split('-');\n      let minyear = parseInt(minstr[0]);\n      let minmonth = parseInt(minstr[1]);\n\n      let maxstr = r[r.length - 1].split('-');\n      let maxyear = parseInt(maxstr[0]);\n      let maxmonth = parseInt(maxstr[1]);\n\n      return [new Date(minyear, minmonth), new Date(maxyear, maxmonth)]\n    }).then(date => {\n      setMinDate(date[0]);\n      setMaxDate(date[1]);\n    }).catch(\n      err => console.log(err)\n    );\n  }\n\n  // fetch date data from API\n  async function fetchdatedata(date){\n    let url = api.root + '/predict/<month>/<year>';\n    url = url.replace('<month>',\n        date.getMonth() + 1).replace('<year>', date.getFullYear())\n    return await fetch(url).then(\n      r => r.text()\n    ).then(\n      r => r = JSON.parse(r)\n    ).then(r => {\n        setDateData(r);\n      }\n    ).catch(\n      err => console.log(err)\n    );\n  }\n\n  // component did mount\n  useEffect(() => {\n    // get date and US info\n    fetchDates();\n    fetchdatedata(today);\n  }, []);\n\n  // updates on change of date data\n  useEffect(() => {\n    if (dateData !== null) {\n      getMap();\n    }\n  }, [dateData]);\n  return (\n    <div>\n      <Header\n        mindate={minDate}\n        maxdate={maxDate}\n        fetchdatedata={fetchdatedata}\n        settoday={setToday}/>\n        {dateData === null ?\n          <header className='body'>\n            <img src={logo} className='logo' alt='logo'/>\n            <p>\n              AI Melts ICE\n            </p>\n            <Spinner animation=\"grow\" variant=\"dark\" role=\"status\"/>\n          </header>\n          :\n          <div className='map'>\n            <div className='sidebarStyle'>\n              <div>{dateData?\n                      dateData['prediction'] ?\n                        'Predicted ICE arrests for '\n                        :\n                        'ICE arrests from ' : null}\n              {monthNames[today.getMonth()]}{' '}{today.getFullYear()}</div>\n            </div>\n            <div ref={el => mapContainer = el} className='mapContainer' />\n          </div>\n        }\n    </div>\n  );\n}\n","import { useState, useEffect } from 'react';\n\nexport default function useWindowSize() {\n  const isClient = typeof window === 'object';\n\n  function getSize() {\n    return {\n      width: isClient ? window.innerWidth : undefined,\n      height: isClient ? window.innerHeight : undefined\n    };\n  }\n\n  const [windowSize, setWindowSize] = useState(getSize);\n\n  useEffect(() => {\n    if (!isClient) {\n      return false;\n    }\n\n    function handleResize() {\n      setWindowSize(getSize());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []); // Empty array ensures that effect is only run on mount and unmount\n\n  return windowSize;\n}\n","export default {\n  mapBoxToken : 'pk.eyJ1IjoiY2FtaWxvZG9hIiwiYSI6ImNrNWJjbnNmcTB2em4zb3BrOGhpZjR3ZzIifQ.nCjfsuPE3tSayQ0O2z7u1Q'\n}\n","import React from \"react\";\nimport logo from '../images/logo512.png';\nimport Header from '../components/header';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nexport default function About() {\n  return (\n    <div>\n      <Header/>\n      <div className=\"about\">\n        <h1 className=\"header my-3 mt-5\">\n          <a href=\"/\"><img src={logo} className=\"about-logo\" alt=\"logo\" /></a>\n          <p className=\"header my-3\">\n            AI Melts ICE\n          </p>\n          <p className=\"about-main\">El pueblo unido jamás será vencido.</p>\n        </h1>\n        <main className=\"about-main\">\n          <Container>\n            <Row>\n              <Col sm>\n                <p>\n                  <a href=\"/\">AI Melts ICE</a> is a web app designed to source and\n                  visualize predictions of ICE raids in the US by county. These predictions\n                  are generated by an LSTM neural network trained on data\n                  (2014 - 2018) from Syracuse's <a href={'https://trac.syr.edu/phptools/immigration/arrest/about_data.html'}>TRAC web API</a>.\n                  Please keep in mind that  any data shown past 2018 are predictions and may not be exact.\n                </p>\n              </Col>\n              <Col sm>\n                <p>\n                  <a href=\"/\">AI Melts ICE</a> es una aplicación web diseñada\n                  para producir y visualizar predicciones de redadas de\n                  inmigrantes en los Estados Unidos por condado. Estas predicciones\n                  son generadas por una red neural LSTM basada en datos\n                  (2014 – 2018) del <a href={'https://trac.syr.edu/phptools/immigration/arrest/about_data.html'}>web API TRAC</a> de\n                  Syracuse. Téngase en cuenta que los datos después de 2018 son predicciones y pueden ser\n                  inexactos.\n                </p>\n              </Col>\n            </Row>\n          </Container>\n        </main>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport Home from './pages/home';\nimport About from './pages/about';\nimport {Switch, Route} from 'react-router-dom';\n\n\nexport default function App({path}) {\n\n  return (\n    <div className='App'>\n      <Switch>\n        <Route exact path='/'>\n          <Home/>\n        </Route>\n        <Route path='/about'>\n          <About/>\n        </Route>\n      </Switch>\n    </div>\n  );\n\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router} from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render((\n  <Router basename={process.env.PUBLIC_URL}>\n    <App/>\n  </Router>\n), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo512.ed261836.png\";"],"sourceRoot":""}