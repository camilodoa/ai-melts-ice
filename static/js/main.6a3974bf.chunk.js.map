{"version":3,"sources":["logo512.png","pages/components/header.js","pages/components/popup.js","config.js","pages/home.js","window.js","tokens.js","pages/about.js","App.js","serviceWorker.js","index.js"],"names":["withRouter","minDate","maxDate","fetchDateData","today","setToday","location","Navbar","bg","expand","sticky","Brand","href","src","logo","className","height","width","alt","Nav","xs","order","pathname","selected","onChange","date","dateFormat","placeholderText","showMonthYearPicker","Link","Popup","county","arrests","countyData","predictionStart","margin","xMax","yMax","x","d","y","xScale","scaleTime","range","domain","extent","yScale","scaleLinear","Math","max","map","yearFormat","timeFormat","chart","fill","rx","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","AxisLeft","label","top","scale","hideAxisLine","left","hideTicks","tickLabelProps","value","index","fontSize","textAnchor","AxisBottom","tickFormat","Group","i","year","barHeight","barX","barY","Bar","Date","parse","getMonth","getFullYear","Home","size","isClient","window","getSize","innerWidth","undefined","innerHeight","useState","windowSize","setWindowSize","useEffect","handleResize","addEventListener","removeEventListener","useWindowSize","mapContainer","useRef","lng","lat","zoom","setMinDate","setMaxDate","dateData","setDateData","setMap","a","url","api","fetch","then","r","text","JSON","minStr","split","minYear","parseInt","minMonth","maxStr","length","maxYear","maxMonth","catch","err","console","log","fetchCountyData","replace","data","dataPoint","getSource","setData","fetchDates","radiusSizes","fontSizes","colors","opacity","mapboxgl","Map","container","style","center","on","addPopup","coordinates","placeholder","document","createElement","ReactDOM","render","setDOMContent","setLngLat","addTo","addSource","type","cluster","clusterMaxZoom","clusterRadius","clusterProperties","addLayer","source","filter","paint","layout","e","features","queryRenderedFeatures","point","layers","clusterId","properties","cluster_id","getClusterExpansionZoom","easeTo","geometry","slice","abs","lngLat","getCanvas","cursor","getMap","ref","el","accessToken","About","Container","Row","Col","sm","App","path","exact","Boolean","hostname","match","basename","process","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6a3974bf.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo512.32d0142b.png\";","import React from 'react';\nimport {withRouter} from 'react-router'\nimport DatePicker from 'react-datepicker';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport logo from '../../logo512.png';\n\nfunction Header({minDate, maxDate, fetchDateData, today, setToday, location}) {\n    return (\n        <Navbar bg='light' expand='lg' sticky='top'>\n            <Navbar.Brand href='/'>\n                <img src={logo} className=\"d-inline-block align-top\" height=\"30\" width=\"30\" alt=\"logo\"/>\n                {' '}\n                AI Melts ICE\n            </Navbar.Brand>\n            <Nav className='ml-sm-auto ml-xs-0 my-2' xs={{ order: 12 }}>\n                {location.pathname === '/' &&\n                        <DatePicker\n                            selected={today}\n                            onChange={date => {\n                                fetchDateData(date);\n                                setToday(date);\n                            }}\n                            dateFormat='MMMM yyyy'\n                            minDate={minDate}\n                            maxDate={maxDate}\n                            placeholderText='Select a month'\n                            showMonthYearPicker/>\n\n                    }\n            </Nav>\n            <Nav className='ml-sm-auto ml-xs-0' xs={{ order: 1 }}>\n                <Nav.Link href='/about'>\n                    About\n                </Nav.Link>\n            </Nav>\n        </Navbar>\n    );\n}\nexport default withRouter(Header);\n","import React from 'react';\nimport { Group } from '@vx/group';\nimport { AxisLeft, AxisBottom } from '@vx/axis';\nimport { Bar } from '@vx/shape';\nimport { scaleTime, scaleLinear } from '@vx/scale';\nimport { extent } from 'd3-array';\nimport { timeFormat } from 'd3-time-format';\n\nexport default function Popup ({county, arrests, countyData, predictionStart, today}) {\n    const width = 215;\n    const height = 150;\n    const margin = {\n        top: 20,\n        bottom: 30,\n        left: 10,\n        right: 10,\n    };\n    const xMax = width - margin.left - margin.right;\n    const yMax = height - margin.top - margin.bottom;\n    // Anonymous functions to extract right data from each element in countyData\n    const x = d => d.x;\n    const y = d => d.y;\n\n    const xScale = scaleTime({\n        range: [0, xMax],\n        domain: extent(countyData, x)\n    });\n    const yScale = scaleLinear({\n        range: [yMax, 0],\n        domain: [0, Math.max(...countyData.map(y))]\n    });\n    const yearFormat = timeFormat('%Y');\n    const formatDate = date => yearFormat(date);\n\n    const monthNames = ['January', 'February', 'March', 'April', 'May', 'June',\n        'July', 'August', 'September', 'October', 'November', 'December'\n    ];\n\n    const chart = (\n        <svg width={width} height={height}>\n            <rect x={0} y={0} width={width} height={height} fill=\"#f7f7f7\" rx={14} />\n            <defs>\n                <linearGradient id=\"gradient\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\n                    <stop offset=\"0%\" stopColor=\"#FFFFFF\" stopOpacity={1} />\n                    <stop offset=\"100%\" stopColor=\"#FFFFFF\" stopOpacity={0.2} />\n                </linearGradient>\n            </defs>\n            <AxisLeft\n                label={'Arrests'}\n                top={15}\n                scale={yScale}\n                hideAxisLine={true}\n                left={15}\n                hideTicks={true}\n                tickLabelProps={(value, index) => ({\n                    fontSize: 7,\n                    textAnchor: 'middle'\n                })}\n            />\n            <AxisBottom\n                top={yMax + margin.top}\n                tickFormat={formatDate}\n                scale={xScale}\n                left={15}\n                hideAxisLine={false}\n                tickLabelProps={(value, index) => ({\n                    fontSize: 7,\n                    textAnchor: 'middle'\n                })}\n            />\n            <Group top={15} left={15}>\n                {countyData.map((d, i) => {\n                    const year = x(d);\n                    const barHeight = yMax - yScale(y(d));\n                    const barX = xScale(year);\n                    const barY = yMax - barHeight;\n                    return (\n                        <Bar\n                            key={`bar-${year}`}\n                            x={barX}\n                            y={barY}\n                            width={4}\n                            height={barHeight}\n                            fill={year >= Date.parse(predictionStart) ? \"#c1cefa\" : \"#0b4fad\"}\n                        />\n                    );\n                })}\n            </Group>\n        </svg>\n    )\n    return (\n        <div className=\"py-2 px-2\">\n          <strong className=\"popup-header my-2\">\n          {county}\n          </strong>\n          <p className='popup-body my-2'>\n            <b>{arrests}</b> {today >= Date.parse(predictionStart) ? 'predicted' : null} {arrests === 1 ? 'arrest' : 'arrests'} in {monthNames[today.getMonth()]}{' '}{today.getFullYear()}\n          </p>\n          <p className='popup-body my-2'>\n            Arrests and predictions:\n          </p>\n          <div className='mt-2 mr-1'>\n            {chart}\n          </div>\n        </div>\n    );\n}\n","export default {\n  root: 'https://ai-melts-ice.appspot.com'\n  // root: 'http://0.0.0.0:8080'\n}\n","import React, {useEffect, useRef, useState} from 'react';\nimport Header from './components/header';\nimport Popup from './components/popup';\nimport ReactDOM from 'react-dom';\nimport mapboxgl from 'mapbox-gl';\nimport token from '../tokens.js';\nimport api from '../config';\nimport useWindowSize from '../window';\nimport logo from '../logo512.png';\n\nmapboxgl.accessToken = token.mapBoxToken;\n\nexport default function Home() {\n  // Utility definitions\n  const monthNames = ['January', 'February', 'March', 'April', 'May', 'June',\n  'July', 'August', 'September', 'October', 'November', 'December'];\n  const size = useWindowSize();\n  // Mapbox ref\n  let mapContainer = useRef();\n  // State\n  const [lng] = useState(-96);\n  const [lat] = useState(40);\n  const [zoom] = useState(size.width < 550 ? 2 : 3.6);\n  const[minDate, setMinDate] = useState(new Date(2015, 1));\n  const [maxDate, setMaxDate] = useState(new Date(2020, 11));\n  const [dateData, setDateData] = useState(null);\n  const [today, setToday] = useState(new Date() <= maxDate ? new Date() : maxDate);\n  const [map, setMap] = useState(null);\n  // Lifecycle\n  useEffect(() => {\n    // Component did load\n    fetchDates();\n    fetchDateData(today);\n  }, [today]);\n  useEffect(() => {\n    // Data loaded\n    if (dateData && !map) {\n      setMap(getMap());\n    }\n  }, [dateData]);\n  // API calls\n  async function fetchDates(){\n    /*\n    Fetch API date ranges\n     */\n    let url = api.root + '/dates';\n    return await fetch(url).then(\n        r => r.text()\n    ).then(\n        r => r = JSON.parse(r)\n    ).then(r => {\n      let minStr = r[0].split('-');\n      let minYear = parseInt(minStr[0]);\n      let minMonth = parseInt(minStr[1]);\n      let maxStr = r[r.length - 1].split('-');\n      let maxYear = parseInt(maxStr[0]);\n      let maxMonth = parseInt(maxStr[1]) - 1;\n      return [new Date(minYear, minMonth), new Date(maxYear, maxMonth)]\n    }).then(date => {\n      setMinDate(date[0]);\n      setMaxDate(date[1]);\n    }).catch(\n        err => console.log(err)\n    );\n  }\n  async function fetchCountyData (county) {\n    /*\n    Fetch county data given name\n     */\n    let url = api.root + '/countydata/' + county.replace(' ', '%20');\n    return await fetch(url).then(\n        r => r.text()\n    ).then(\n        r => r = JSON.parse(r)\n    ).then(r => {\n      return r.data.map(dataPoint => (\n          {\n            x: new Date(dataPoint.date.split('-')[0], dataPoint.date.split('-')[1]),\n            y: dataPoint.arrests\n          }\n      ));\n    }).catch(\n        err => console.log(err)\n    );\n  }\n  async function fetchDateData(date){\n    /*\n    Get monthly prediction from API\n     */\n    let url = api.root + '/predict/<month>/<year>';\n    url = url.replace('<month>',\n        date.getMonth() + 1).replace('<year>', date.getFullYear())\n    return await fetch(url).then(\n        r => r.text()\n    ).then(\n        r => r = JSON.parse(r)\n    ).then(r => {\n          setDateData(r);\n          if (map) {\n            map.getSource('ai-melts-ice').setData(r.data);\n          }\n        }\n    ).catch(\n        err => console.log(err)\n    );\n  }\n  // Map\n  function getMap() {\n    /*\n    Create a Mapbox map and attach it to mapContainer\n     */\n    const radiusSizes = size.width < 550 ? [ 30, 100, 40, 500, 50] : [ 30, 100, 40, 500, 60];\n    const fontSizes = [ 20, 100, 30, 500, 40];\n    const colors = ['#ffcc00', 100, '#ff9966', 500, '#cc3300'];\n    const opacity = 0.7;\n    const map = new mapboxgl.Map({\n      container: mapContainer,\n      style: 'mapbox://styles/camilodoa/ck9xqloge1g0f1ipj4y85tkzh',\n      center: [lng, lat],\n      zoom: zoom\n    });\n    map.on('load', () => {\n      /*\n      When the map loads, add all of its features\n       */\n      map.addSource('ai-melts-ice', {\n        /*\n        Load data into map\n         */\n        type: 'geojson',\n        data: dateData['data'],\n        cluster: true,\n        clusterMaxZoom: 5,\n        clusterRadius: 60,\n        clusterProperties: {\n          \"arrests_sum\": [\"+\", ['get', 'arrests']]\n        }\n      });\n      map.addLayer({\n        /*\n        Add clustered circle symbol\n         */\n        id: 'cluster',\n        type: 'circle',\n        source: 'ai-melts-ice',\n        filter: [\">\", 'arrests_sum', 0],\n        paint: {\n          'circle-color': [\n            'step',\n            ['get', 'arrests_sum'],\n            colors[0],\n            colors[1],\n            colors[2],\n            colors[3],\n            colors[4]\n          ],\n          'circle-radius': [\n            'step',\n            ['get', 'arrests_sum'],\n            radiusSizes[0],\n            radiusSizes[1],\n            radiusSizes[2],\n            radiusSizes[3],\n            radiusSizes[4]\n          ],\n          'circle-opacity': opacity\n        }\n      });\n      map.addLayer({\n        /*\n        Add clustered number of arrests\n         */\n        id: 'cluster-count',\n        type: 'symbol',\n        source: 'ai-melts-ice',\n        filter: [\">\", 'arrests_sum', 0],\n        layout: {\n          'text-field': ['get', 'arrests_sum'],\n          'text-font': ['DIN Offc Pro Medium', 'Arial Unicode MS Bold'],\n          'text-size': [\n            'step',\n            ['get', 'arrests_sum'],\n            fontSizes[0],\n            fontSizes[1],\n            fontSizes[2],\n            fontSizes[3],\n            fontSizes[4]\n          ]\n        }\n      });\n      map.addLayer({\n        /*\n        Add unclustered circle symbol\n         */\n        id: 'unclustered-point',\n        type: 'circle',\n        source: 'ai-melts-ice',\n        filter: [\"all\", ['!has', 'point_count'], [\">\", 'arrests', 0]],\n        paint: {\n          'circle-color': [\n            'step',\n            ['get', 'arrests'],\n            colors[0],\n            colors[1],\n            colors[2],\n            colors[3],\n            colors[4]\n          ],\n          'circle-radius': [\n            'step',\n            ['get', 'arrests'],\n            radiusSizes[0],\n            radiusSizes[1],\n            radiusSizes[2],\n            radiusSizes[3],\n            radiusSizes[4]\n          ],\n          'circle-opacity': opacity\n        }\n      });\n      map.addLayer({\n        /*\n        Add unclusted point number of arrests\n         */\n        id: 'unclustered-count',\n        type: 'symbol',\n        source: 'ai-melts-ice',\n        filter: [\"all\", ['!has', 'point_count'], [\">\", 'arrests', 0]],\n        layout: {\n          'text-field': ['get', 'arrests'],\n          'text-font': ['DIN Offc Pro Medium', 'Arial Unicode MS Bold'],\n          'text-size': [\n            'step',\n            ['get', 'arrests'],\n            fontSizes[0],\n            fontSizes[1],\n            fontSizes[2],\n            fontSizes[3],\n            fontSizes[4]\n          ]\n        }\n      });\n      map.on('click', 'cluster', function(e) {\n        /*\n       When the client clicks on an clustered point, zoom in\n        */\n        var features = map.queryRenderedFeatures(e.point, {\n          layers: ['cluster']\n        });\n        var clusterId = features[0].properties.cluster_id;\n        map.getSource('ai-melts-ice').getClusterExpansionZoom(\n          clusterId,\n          function(err, zoom) {\n            if (err) return;\n            map.easeTo({\n              center: features[0].geometry.coordinates,\n              zoom: zoom\n            });\n          }\n        );\n      });\n      map.on('click', 'unclustered-point', function(e) {\n        /*\n        When the client clicks on an unclustered point, show popup\n         */\n        const coordinates = e.features[0].geometry.coordinates.slice();\n        // Ensure that if the map is zoomed out such that multiple\n        // copies of the feature are visible, the popup appears\n        // over the copy being pointed to.\n        while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\n        coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\n        }\n        addPopup(e.features[0].properties.arrests, coordinates, e.features[0].properties.county)\n      });\n      async function addPopup(arrests, coordinates, county) {\n        /*\n        Adds popup to the map with customizable Popup component\n         */\n        let countyData = await fetchCountyData(county);\n        const placeholder = document.createElement('popup');\n        const predictionStart = dateData.predictionStart;\n        ReactDOM.render(new Popup({\n          arrests: arrests,\n          county: county,\n          countyData,\n          predictionStart,\n          today}), placeholder);\n        new mapboxgl.Popup()\n            .setDOMContent(placeholder)\n            .setLngLat(coordinates)\n            .addTo(map);\n      }\n      map.on('mouseenter', 'unclustered-point', function() {\n        /*\n        Change mouse appearance on clickable counties\n         */\n        map.getCanvas().style.cursor = 'pointer';\n      });\n      map.on('mouseleave', 'unclustered-point', function() {\n        /*\n       Change mouse appearance on clickable counties\n        */\n        map.getCanvas().style.cursor = '';\n      });\n      map.on('mouseenter', 'cluster', function() {\n        /*\n      Change mouse appearance on clickable counties\n       */\n        map.getCanvas().style.cursor = 'pointer';\n      });\n\n      map.on('mouseleave', 'cluster', function() {\n        /*\n      Change mouse appearance on clickable counties\n       */\n        map.getCanvas().style.cursor = '';\n      });\n    });\n    return map;\n  }\n  return (\n    <div>\n      <Header\n        minDate={minDate}\n        maxDate={maxDate}\n        fetchDateData={fetchDateData}\n        today={today}\n        setToday={setToday}/>\n      {\n        dateData === null ?\n        <h1 className='body header my-3 mt-5\"'>\n            <img src={logo} className='logo' alt='logo'/>\n            <p className='header my-3'>\n              AI Melts ICE\n            </p>\n            <p className=\"about-main\">El pueblo unido jamás será vencido.</p>\n        </h1>\n        :\n        <div className='map'>\n          <div className='sidebarStyle'>\n            <div>{dateData?\n                    dateData['prediction'] ?\n                      'Predicted ICE arrests for '\n                      :\n                      'ICE arrests from ' : null}\n            {monthNames[today.getMonth()]}{' '}{today.getFullYear()}</div>\n          </div>\n          <div ref={el => mapContainer = el} className='mapContainer' />\n        </div>\n        }\n    </div>\n  );\n}\n","import { useState, useEffect } from 'react';\n\nexport default function useWindowSize() {\n  const isClient = typeof window === 'object';\n  function getSize() {\n    return {\n      width: isClient ? window.innerWidth : undefined,\n      height: isClient ? window.innerHeight : undefined\n    };\n  }\n  const [windowSize, setWindowSize] = useState(getSize);\n  useEffect(() => {\n    if (!isClient) {\n      return false;\n    }\n    function handleResize() {\n      setWindowSize(getSize());\n    }\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []); // Empty array ensures that effect is only run on mount and unmount\n  return windowSize;\n}\n","export default {\n  mapBoxToken : 'pk.eyJ1IjoiY2FtaWxvZG9hIiwiYSI6ImNrNWJjbnNmcTB2em4zb3BrOGhpZjR3ZzIifQ.nCjfsuPE3tSayQ0O2z7u1Q'\n}\n","import React from \"react\";\nimport logo from '../logo512.png';\nimport Header from './components/header';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nexport default function About() {\n  return (\n    <div>\n      <Header/>\n      <div className=\"about\">\n        <h1 className=\"header my-3 mt-5\">\n          <a href=\"/\"><img src={logo} className=\"about-logo\" alt=\"logo\" /></a>\n          <p className=\"header my-3\">\n            AI Melts ICE\n          </p>\n          <p className=\"about-main\">El pueblo unido jamás será vencido.</p>\n        </h1>\n        <main className=\"about-main\">\n          <Container>\n            <Row>\n              <Col sm>\n                <p>\n                  <a href=\"/\">AI Melts ICE</a> is a web app designed to source and\n                  visualize predictions of ICE raids in the US by county. These predictions\n                  are generated by an LSTM neural network trained on data\n                  (2014 - 2018) from Syracuse's <a href={'https://trac.syr.edu/phptools/immigration/arrest/about_data.html'}>TRAC web API</a>.\n                  Please keep in mind that all data shown past 2018 is predicted and may not be exact.\n                </p>\n              </Col>\n              <Col sm>\n                <p>\n                  <a href=\"/\">AI Melts ICE</a> es una aplicación web diseñada\n                  para producir y visualizar predicciones de redadas de\n                  inmigrantes en los Estados Unidos por condado. Estas predicciones\n                  son generadas por una red neural LSTM basada en datos\n                  (2014 – 2018) del <a href={'https://trac.syr.edu/phptools/immigration/arrest/about_data.html'}>web API TRAC</a> de\n                  Syracuse. Téngase en cuenta que los datos después de 2018 son predicciones y pueden ser\n                  inexactos.\n                </p>\n              </Col>\n            </Row>\n          </Container>\n        </main>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport Home from './pages/home';\nimport About from './pages/about';\nimport {Switch, Route} from 'react-router-dom';\n\nexport default function App({path}) {\n  return (\n    <div className='App'>\n      <Switch>\n        <Route exact path='/'>\n          <Home/>\n        </Route>\n        <Route path='/about'>\n          <About/>\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router} from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render((\n  <Router basename={process.env.PUBLIC_URL}>\n    <App/>\n  </Router>\n), document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}